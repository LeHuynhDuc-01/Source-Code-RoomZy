// Generated by view binder compiler. Do not edit!
package com.app.roomzy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.roomzy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout controlLocation;

  @NonNull
  public final ImageView imageFilter;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final EditText search;

  @NonNull
  public final ImageButton searchBtn;

  @NonNull
  public final RecyclerView searchView;

  @NonNull
  public final TextView tvLocationName;

  private FragmentSearchBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout controlLocation, @NonNull ImageView imageFilter,
      @NonNull LinearLayout linearLayout, @NonNull EditText search, @NonNull ImageButton searchBtn,
      @NonNull RecyclerView searchView, @NonNull TextView tvLocationName) {
    this.rootView = rootView;
    this.controlLocation = controlLocation;
    this.imageFilter = imageFilter;
    this.linearLayout = linearLayout;
    this.search = search;
    this.searchBtn = searchBtn;
    this.searchView = searchView;
    this.tvLocationName = tvLocationName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.controlLocation;
      LinearLayout controlLocation = ViewBindings.findChildViewById(rootView, id);
      if (controlLocation == null) {
        break missingId;
      }

      id = R.id.image_filter;
      ImageView imageFilter = ViewBindings.findChildViewById(rootView, id);
      if (imageFilter == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.search;
      EditText search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      ImageButton searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchView;
      RecyclerView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.tvLocationName;
      TextView tvLocationName = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationName == null) {
        break missingId;
      }

      return new FragmentSearchBinding((RelativeLayout) rootView, controlLocation, imageFilter,
          linearLayout, search, searchBtn, searchView, tvLocationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
