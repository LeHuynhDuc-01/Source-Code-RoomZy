// Generated by view binder compiler. Do not edit!
package com.app.roomzy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.roomzy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView amazonIcon;

  @NonNull
  public final Button buyBtn;

  @NonNull
  public final Button buyCall;

  @NonNull
  public final ImageView img1;

  @NonNull
  public final ImageView img2;

  @NonNull
  public final ImageView img3;

  @NonNull
  public final ImageView like;

  @NonNull
  public final ImageView mainImage;

  @NonNull
  public final TextView pDesc;

  @NonNull
  public final TextView pName;

  @NonNull
  public final TextView pPrice;

  @NonNull
  public final RelativeLayout parent;

  @NonNull
  public final Button productReport;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final ImageView shopIcon;

  @NonNull
  public final TextView txtdesc;

  private FragmentProductDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView amazonIcon, @NonNull Button buyBtn, @NonNull Button buyCall,
      @NonNull ImageView img1, @NonNull ImageView img2, @NonNull ImageView img3,
      @NonNull ImageView like, @NonNull ImageView mainImage, @NonNull TextView pDesc,
      @NonNull TextView pName, @NonNull TextView pPrice, @NonNull RelativeLayout parent,
      @NonNull Button productReport, @NonNull NestedScrollView scroll, @NonNull ImageView shopIcon,
      @NonNull TextView txtdesc) {
    this.rootView = rootView;
    this.amazonIcon = amazonIcon;
    this.buyBtn = buyBtn;
    this.buyCall = buyCall;
    this.img1 = img1;
    this.img2 = img2;
    this.img3 = img3;
    this.like = like;
    this.mainImage = mainImage;
    this.pDesc = pDesc;
    this.pName = pName;
    this.pPrice = pPrice;
    this.parent = parent;
    this.productReport = productReport;
    this.scroll = scroll;
    this.shopIcon = shopIcon;
    this.txtdesc = txtdesc;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amazonIcon;
      CardView amazonIcon = ViewBindings.findChildViewById(rootView, id);
      if (amazonIcon == null) {
        break missingId;
      }

      id = R.id.buyBtn;
      Button buyBtn = ViewBindings.findChildViewById(rootView, id);
      if (buyBtn == null) {
        break missingId;
      }

      id = R.id.buyCall;
      Button buyCall = ViewBindings.findChildViewById(rootView, id);
      if (buyCall == null) {
        break missingId;
      }

      id = R.id.img1;
      ImageView img1 = ViewBindings.findChildViewById(rootView, id);
      if (img1 == null) {
        break missingId;
      }

      id = R.id.img2;
      ImageView img2 = ViewBindings.findChildViewById(rootView, id);
      if (img2 == null) {
        break missingId;
      }

      id = R.id.img3;
      ImageView img3 = ViewBindings.findChildViewById(rootView, id);
      if (img3 == null) {
        break missingId;
      }

      id = R.id.like;
      ImageView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.mainImage;
      ImageView mainImage = ViewBindings.findChildViewById(rootView, id);
      if (mainImage == null) {
        break missingId;
      }

      id = R.id.pDesc;
      TextView pDesc = ViewBindings.findChildViewById(rootView, id);
      if (pDesc == null) {
        break missingId;
      }

      id = R.id.pName;
      TextView pName = ViewBindings.findChildViewById(rootView, id);
      if (pName == null) {
        break missingId;
      }

      id = R.id.pPrice;
      TextView pPrice = ViewBindings.findChildViewById(rootView, id);
      if (pPrice == null) {
        break missingId;
      }

      RelativeLayout parent = (RelativeLayout) rootView;

      id = R.id.productReport;
      Button productReport = ViewBindings.findChildViewById(rootView, id);
      if (productReport == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.shopIcon;
      ImageView shopIcon = ViewBindings.findChildViewById(rootView, id);
      if (shopIcon == null) {
        break missingId;
      }

      id = R.id.txtdesc;
      TextView txtdesc = ViewBindings.findChildViewById(rootView, id);
      if (txtdesc == null) {
        break missingId;
      }

      return new FragmentProductDetailBinding((RelativeLayout) rootView, amazonIcon, buyBtn,
          buyCall, img1, img2, img3, like, mainImage, pDesc, pName, pPrice, parent, productReport,
          scroll, shopIcon, txtdesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
